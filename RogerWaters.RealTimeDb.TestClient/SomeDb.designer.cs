#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RogerWaters.RealTimeDb.TestClient
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SomeDB")]
	public partial class SomeDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertMyTable2(MyTable2 instance);
    partial void UpdateMyTable2(MyTable2 instance);
    partial void DeleteMyTable2(MyTable2 instance);
    partial void InsertMyTable(MyTable instance);
    partial void UpdateMyTable(MyTable instance);
    partial void DeleteMyTable(MyTable instance);
    #endregion
		
		public SomeDbDataContext() : 
				base(global::RogerWaters.RealTimeDb.TestClient.Properties.Settings.Default.SomeDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SomeDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SomeDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SomeDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SomeDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<empty> empty
		{
			get
			{
				return this.GetTable<empty>();
			}
		}
		
		public System.Data.Linq.Table<MyTable2> MyTable2
		{
			get
			{
				return this.GetTable<MyTable2>();
			}
		}
		
		public System.Data.Linq.Table<MyTable> MyTable
		{
			get
			{
				return this.GetTable<MyTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.empty")]
	public partial class empty
	{
		
		private int _id;
		
		public empty()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyTable2")]
	public partial class MyTable2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MyTable2_id;
		
		private string _some;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMyTable2_idChanging(int value);
    partial void OnMyTable2_idChanged();
    partial void OnsomeChanging(string value);
    partial void OnsomeChanged();
    #endregion
		
		public MyTable2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyTable2_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MyTable2_id
		{
			get
			{
				return this._MyTable2_id;
			}
			set
			{
				if ((this._MyTable2_id != value))
				{
					this.OnMyTable2_idChanging(value);
					this.SendPropertyChanging();
					this._MyTable2_id = value;
					this.SendPropertyChanged("MyTable2_id");
					this.OnMyTable2_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[some]", Storage="_some", DbType="NVarChar(50)")]
		public string some
		{
			get
			{
				return this._some;
			}
			set
			{
				if ((this._some != value))
				{
					this.OnsomeChanging(value);
					this.SendPropertyChanging();
					this._some = value;
					this.SendPropertyChanged("some");
					this.OnsomeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MyTable")]
	public partial class MyTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MyTable_id;
		
		private string _some;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMyTable_idChanging(int value);
    partial void OnMyTable_idChanged();
    partial void OnsomeChanging(string value);
    partial void OnsomeChanged();
    #endregion
		
		public MyTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MyTable_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MyTable_id
		{
			get
			{
				return this._MyTable_id;
			}
			set
			{
				if ((this._MyTable_id != value))
				{
					this.OnMyTable_idChanging(value);
					this.SendPropertyChanging();
					this._MyTable_id = value;
					this.SendPropertyChanged("MyTable_id");
					this.OnMyTable_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[some]", Storage="_some", DbType="NVarChar(50)")]
		public string some
		{
			get
			{
				return this._some;
			}
			set
			{
				if ((this._some != value))
				{
					this.OnsomeChanging(value);
					this.SendPropertyChanging();
					this._some = value;
					this.SendPropertyChanged("some");
					this.OnsomeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
